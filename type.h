#pragma once

namespace DummyScheme {

enum {
	DUMMY_TYPE_INT_NUM,
	DUMMY_TYPE_FLOAT_NUM,
	DUMMY_TYPE_STRING,
	DUMMY_TYPE_SYMBOL,
	DUMMY_TYPE_NIL,
	DUMMY_TYPE_TRUE,
	DUMMY_TYPE_FALSE,
	DUMMY_TYPE_PLUS,
	DUMMY_TYPE_MINUS,
	DUMMY_TYPE_MUL,
	DUMMY_TYPE_DIVIDE,
	DUMMY_TYPE_DEFINE,
	DUMMY_TYPE_LET,
	DUMMY_TYPE_BEGIN,
	DUMMY_TYPE_IF,
	DUMMY_TYPE_WHEN,
	DUMMY_TYPE_UNLESS,
	DUMMY_TYPE_LAMBDA,
	DUMMY_TYPE_APPLY,
	DUMMY_TYPE_DISPLAY,
	DUMMY_TYPE_LIST, // TODO: separate raw list and op list
	DUMMY_TYPE_LIST_MARK,
	DUMMY_TYPE_NULL_MARK,
	DUMMY_TYPE_EQUAL_MARK,
	DUMMY_TYPE_EQUAL,
	DUMMY_TYPE_NOT,
	DUMMY_TYPE_LESS,
	DUMMY_TYPE_LESS_EQUAL,
	DUMMY_TYPE_BIG,
	DUMMY_TYPE_BIG_EQUAL,
	DUMMY_TYPE_LENGTH,
	DUMMY_TYPE_LOAD,
	DUMMY_TYPE_QUOTE,
	DUMMY_TYPE_UNQUOTE,
	DUMMY_TYPE_UNQUOTE_SPLICING,
	DUMMY_TYPE_QUASIQUOTE,
	DUMMY_TYPE_MAX,
};

};
